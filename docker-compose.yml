version: '3.9'

services:

  php-min:
    build:
      dockerfile: Dockerfile-${DOCKERFILE_FLAVOUR}
      context: 'php'
      target: min
      args:
        - PHP_BASE_IMAGE_VERSION
        - X_LEGACY_GD_LIB
        - PECL_XDEBUG_INSTALL_SUFFIX
        - PECL_MONGODB_INSTALL_SUFFIX
    container_name: ${APP_NAME}-min
    image: ${PHP_IMAGE_NAME}:${PHP_BASE_IMAGE_VERSION}${PHP_IMAGE_VERSION_SUFFIX}-min
    environment:
      - GITHUB_API_TOKEN=${GITHUB_API_TOKEN}
      - PHP_ENABLE_XDEBUG
      - TEST_RUNTIME_PATH=/tmp/runtime
    volumes:
      # Application
      #- ./app:/app:delegated
      - ./app:/app
      # Composer cache
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
    #ports:
    #  - ${PHP_PORT}:80
    depends_on:
      - db
    networks:
      - app-network
      #default:
      #  aliases:
      #    - php

  php-dev:
    extends:
      service: php-min
    build:
      target: dev
    container_name: ${APP_NAME}-php
    image: ${PHP_IMAGE_NAME}:${PHP_BASE_IMAGE_VERSION}${PHP_IMAGE_VERSION_SUFFIX}
    ports:
      - ${PHP_PORT}:80

  db:
    image: postgres:alpine
    container_name: ${APP_NAME}-db
    restart: unless-stopped
    tty: true
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./dbdata:/var/lib/postgresql/data
      - ./:/app
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      SERVICE_TAGS: ${APP_ENV}
      SERVICE_NAME: ${DB_SERVICE_NAME}
    networks:
      - app-network
      #default:
      #  aliases:
      #    - db

#Docker Networks
networks:
  app-network:
    driver: bridge
volumes:
  dbdata:
#    driver: local
